{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../lib/collections","imported":["Chats","Messages"],"specifiers":[{"kind":"named","imported":"Chats","local":"Chats"},{"kind":"named","imported":"Messages","local":"Messages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/publications.js","filenameRelative":"/server/publications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/publications.js.map","sourceFileName":"/server/publications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"publications"},"ignored":false,"code":"var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Chats,Messages;module.import('../lib/collections',{\"Chats\":function(v){Chats=v},\"Messages\":function(v){Messages=v}});\n\n\nMeteor.publish('users', function () {\n  return Meteor.users.find({}, { fields: { profile: 1 } });\n});\n\nMeteor.publishComposite('chats', function () {\n  if (!this.userId) return;\n\n  return {\n    find: function () {\n      function find() {\n        return Chats.find({ userIds: this.userId });\n      }\n\n      return find;\n    }(),\n\n    children: [{\n      find: function () {\n        function find(chat) {\n          return Messages.find({ chatId: chat._id });\n        }\n\n        return find;\n      }()\n    }, {\n      find: function () {\n        function find(chat) {\n          var query = { _id: { $in: chat.userIds } };\n          var options = { fields: { profile: 1 } };\n\n          return Meteor.users.find(query, options);\n        }\n\n        return find;\n      }()\n    }]\n  };\n});","ast":null,"map":{"version":3,"sources":["/server/publications.js"],"names":["Meteor","Chats","Messages","publish","users","find","fields","profile","publishComposite","userId","userIds","children","chat","chatId","_id","query","$in","options"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,oBAAhC;;AAEAF,OAAOG,OAAP,CAAe,OAAf,EAAwB,YAAW;AACjC,SAAOH,OAAOI,KAAP,CAAaC,IAAb,CAAkB,EAAlB,EAAsB,EAAEC,QAAQ,EAAEC,SAAS,CAAX,EAAV,EAAtB,CAAP;AACD,CAFD;;AAIAP,OAAOQ,gBAAP,CAAwB,OAAxB,EAAiC,YAAW;AAC1C,MAAI,CAAC,KAAKC,MAAV,EAAkB;;AAElB,SAAO;AACLJ,QADK;AAAA,sBACE;AACL,eAAOJ,MAAMI,IAAN,CAAW,EAAEK,SAAS,KAAKD,MAAhB,EAAX,CAAP;AACD;;AAHI;AAAA;;AAILE,cAAU,CACR;AACEN,UADF;AAAA,sBACOO,IADP,EACa;AACT,iBAAOV,SAASG,IAAT,CAAc,EAAEQ,QAAQD,KAAKE,GAAf,EAAd,CAAP;AACD;;AAHH;AAAA;AAAA,KADQ,EAMR;AACET,UADF;AAAA,sBACOO,IADP,EACa;AACT,cAAMG,QAAQ,EAAED,KAAK,EAAEE,KAAKJ,KAAKF,OAAZ,EAAP,EAAd;AACA,cAAMO,UAAU,EAAEX,QAAQ,EAAEC,SAAS,CAAX,EAAV,EAAhB;;AAEA,iBAAOP,OAAOI,KAAP,CAAaC,IAAb,CAAkBU,KAAlB,EAAyBE,OAAzB,CAAP;AACD;;AANH;AAAA;AAAA,KANQ;AAJL,GAAP;AAoBD,CAvBD","file":"/server/publications.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Chats, Messages } from '../lib/collections';\n\nMeteor.publish('users', function() {\n  return Meteor.users.find({}, { fields: { profile: 1 } });\n});\n\nMeteor.publishComposite('chats', function() {\n  if (!this.userId) return;\n\n  return {\n    find() {\n      return Chats.find({ userIds: this.userId });\n    },\n    children: [\n      {\n        find(chat) {\n          return Messages.find({ chatId: chat._id });\n        }\n      },\n      {\n        find(chat) {\n          const query = { _id: { $in: chat.userIds } };\n          const options = { fields: { profile: 1 } };\n\n          return Meteor.users.find(query, options);\n        }\n      }\n    ]\n  };\n});"]},"hash":"9f572de2db96788f29646419e8ced78de280b8bd"}
