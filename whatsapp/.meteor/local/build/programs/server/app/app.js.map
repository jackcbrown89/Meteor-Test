{"version":3,"sources":["meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/lib/methods.js","meteor://ðŸ’»app/server/bootstrap.js","meteor://ðŸ’»app/server/publications.js","meteor://ðŸ’»app/server/sms.js"],"names":["Mongo","Chats","Collection","Messages","Meteor","check","methods","newMessage","message","userId","Error","Match","OneOf","text","String","type","chatId","picture","timestamp","Date","messageId","insert","update","$set","lastMessage","updateName","name","length","users","newChat","otherId","otherUser","findOne","chat","userIds","createdAt","removeChat","_","include","remove","_id","updatePicture","data","Accounts","startup","find","count","createUserWithPhone","phone","profile","publish","fields","publishComposite","children","query","$in","options","settings","ACCOUNTS_PHONE","_options","adminPhoneNumbers","ADMIN_NUMBERS","phoneVerificationMasterCode","MASTER_CODE"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const Chats = new Mongo.Collection('chats');\nexport const Messages = new Mongo.Collection('messages');","import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { Chats, Messages } from '../lib/collections';\n\nMeteor.methods({\n  newMessage(message) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-logged-in',\n        'Must be logged in to send message.');\n    }\n\n    check(message, Match.OneOf(\n      {\n        text: String,\n        type: String,\n        chatId: String\n      },\n      {\n        picture: String,\n        type: String,\n        chatId: String\n      }\n    ));\n\n    message.timestamp = new Date();\n    message.userId = this.userId;\n\n    const messageId = Messages.insert(message);\n    Chats.update(message.chatId, { $set: { lastMessage: message } });\n\n    return messageId;\n  },\n  updateName(name) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-logged-in',\n        'Must be logged in to update his name.');\n    }\n\n    check(name, String);\n\n    if (name.length === 0) {\n      throw Meteor.Error('name-required', 'Must provide a user name');\n    }\n\n    return Meteor.users.update(this.userId, { $set: { 'profile.name': name } });\n  },\n  newChat(otherId) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-logged-in',\n        'Must be logged to create a chat.');\n    }\n\n    check(otherId, String);\n    const otherUser = Meteor.users.findOne(otherId);\n\n    if (!otherUser) {\n      throw new Meteor.Error('user-not-exists',\n        'Chat\\'s user not exists');\n    }\n\n    const chat = {\n      userIds: [this.userId, otherId],\n      createdAt: new Date()\n    };\n\n    const chatId = Chats.insert(chat);\n\n    return chatId;\n  },\n  removeChat(chatId) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-logged-in',\n        'Must be logged to create a chat.');\n    }\n\n    check(chatId, String);\n\n    const chat = Chats.findOne(chatId);\n\n    if (!chat || !_.include(chat.userIds, this.userId)) {\n      throw new Meteor.Error('chat-not-exists',\n        'Chat not exists');\n    }\n\n    Messages.remove({ chatId: chatId });\n\n    return Chats.remove({ _id: chatId });\n  },\n  updatePicture(data) {\n    if (!this.userId) {\n      throw new Meteor.Error('not-logged-in',\n        'Must be logged in to update his picture.');\n    }\n\n    check(data, String);\n\n    return Meteor.users.update(this.userId, { $set: { 'profile.picture': data } });\n  }\n});","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\nMeteor.startup(function() {\n  if (Meteor.users.find().count() != 0) return;\n\n  Accounts.createUserWithPhone({\n    phone: '+972501234567',\n    profile: {\n      name: 'My friend 1'\n    }\n  });\n\n  Accounts.createUserWithPhone({\n    phone: '+972501234568',\n    profile: {\n      name: 'My friend 2'\n    }\n  });\n\n  Accounts.createUserWithPhone({\n    phone: '+972501234569',\n    profile: {\n      name: 'My friend 3'\n    }\n  });\n});","import { Meteor } from 'meteor/meteor';\nimport { Chats, Messages } from '../lib/collections';\n\nMeteor.publish('users', function() {\n  return Meteor.users.find({}, { fields: { profile: 1 } });\n});\n\nMeteor.publishComposite('chats', function() {\n  if (!this.userId) return;\n\n  return {\n    find() {\n      return Chats.find({ userIds: this.userId });\n    },\n    children: [\n      {\n        find(chat) {\n          return Messages.find({ chatId: chat._id });\n        }\n      },\n      {\n        find(chat) {\n          const query = { _id: { $in: chat.userIds } };\n          const options = { fields: { profile: 1 } };\n\n          return Meteor.users.find(query, options);\n        }\n      }\n    ]\n  };\n});","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\n\nif (Meteor.settings && Meteor.settings.ACCOUNTS_PHONE) {\n  Accounts._options.adminPhoneNumbers = Meteor.settings.ACCOUNTS_PHONE.ADMIN_NUMBERS;\n  Accounts._options.phoneVerificationMasterCode = Meteor.settings.ACCOUNTS_PHONE.MASTER_CODE;\n}"]}